{"version":3,"sources":["components/MusicPlayer/MusicPlayer.jsx","components/MusicForm/MusicForm.jsx","components/App/App.js","reportWebVitals.js","index.js"],"names":["MusicPlayer","props","handleStatusChange","useCallback","onChange","name","status","button","handleDeleteSong","onDelete","id","handleEditSong","onEdit","handleStopSong","onStop","Card","className","Body","Title","Text","Badge","variant","Button","onClick","pauseBtn","stopBtn","MusicForm","useState","setName","setStatus","handleSubmit","event","preventDefault","onUpdate","onSave","htmlFor","value","target","type","changeStatus","currentStatus","App","isFormVisible","changeFormVisibility","editableSong","setEditable","pauser","stoper","list","changeList","handleChange","prevState","map","song","handleStop","handleCreateSong","createNewSongItem","concat","Math","random","toString","substr","updateSongItem","updatedSongID","updatedSongName","updatedSongStatus","songItem","handleDelete","filter","handleEdit","songFromList","find","size","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bf893f49.chunk.js","sourcesContent":["import Button from 'react-bootstrap/Button';\nimport Badge from 'react-bootstrap/Badge';\nimport Card from 'react-bootstrap/Card';\nimport { useCallback  } from 'react';\nimport './MusicPlayer.css'\n\nfunction MusicPlayer(props) {\n  const handleStatusChange = useCallback(() => {\n    props.onChange(props.name, props.status, props.button);\n\n  },[props])\n\n  const handleDeleteSong = useCallback(() => {\n    props.onDelete(props.id);\n  },[props])\n\n  const handleEditSong = useCallback(() => {\n    props.onEdit(props.id);\n  },[props])\n\n  const handleStopSong = useCallback (() => {\n    props.onStop(props.name)\n  },[props])\n\n    return (\n      <Card className=\"song-item\">\n        <Card.Body>\n        <Card.Title className={`song-name is-${props.status}`}>\n           {props.name}\n        </Card.Title>\n        <Card.Text className={`song-item-status is-${props.status}`}>\n        <Badge variant=\"secondary\">{props.status}</Badge>\n        </Card.Text>\n        <Button variant=\"outline-dark\"onClick={handleStatusChange}>{props.pauseBtn}</Button>\n        <Button variant=\"outline-dark\"onClick={handleStopSong}>{props.stopBtn}</Button>\n        <Button variant=\"danger\" onClick={handleDeleteSong}>Delete</Button>\n        <Button variant=\"info\" onClick={handleEditSong}>Edit</Button>\n      </Card.Body>\n      </Card>\n    )\n  }\n\nexport default MusicPlayer;\n","import Button from 'react-bootstrap/Button';\nimport { useCallback, useState } from 'react';\nimport './MusicForm.css';\n\nconst MusicForm = (props) => {\n    const [name, setName] = useState(props.name || '');\n    const [status, setStatus] = useState(props.status || 'stop');\n\n    const handleSubmit = useCallback((event) => {\n        event.preventDefault();\n        if (props.id) {\n            props.onUpdate(props.id, name, status)\n        } else {\n            props.onSave(name, status)\n        }\n    }, [props, name, status]);\n    return (\n        <form className=\"song-item-form\">\n            <div className='form-item'>\n                <label className=\"form-label\" htmlFor=\"state\">State:</label>\n                <select \n                    className=\"form-control\" \n                    name=\"state\" \n                    id=\"state\"\n                    value={status}\n                    onChange={(event) => setStatus(event.target.value)}>\n\n                    <option value=\"play\">Play</option>\n                    <option value=\"stop\">Stop</option>\n                    <option value=\"pause\">Pause</option>\n                </select>\n            </div>\n            <div className=\"form-item\">\n            <label className=\"form-label\" htmlFor=\"name\">Name:</label>\n            <input \n                className=\"form-control\" \n                type=\"text\" \n                name=\"name\" \n                id=\"name\"\n                value={name}\n                onChange={(event) => setName(event.target.value)}/>\n            </div>\n            <div className=\"centered\">\n            <Button onClick={handleSubmit}>Save</Button>\n            </div>\n        </form>\n    )\n};\n\nexport default MusicForm;","import Button from 'react-bootstrap/Button';\nimport { useState, useCallback} from 'react';\nimport MusicPlayer from '../MusicPlayer/MusicPlayer';\nimport MusicForm from '../MusicForm/MusicForm';\nimport './App.css';\n\nfunction changeStatus(currentStatus) {\n  if (currentStatus === 'stop') {\n    return 'play';\n  } else if (currentStatus === 'play') {\n    return 'pause';\n  } else if (currentStatus === 'pause') {\n    return 'play';\n  } \n}\n\nfunction changeBtn(currentStatus) {\n  if (currentStatus === 'stop') {\n    return 'Pause';\n  } else if (currentStatus === 'play'){\n    return 'Play';\n  } else if (currentStatus === 'pause'){\n    return 'Pause';\n  }\n}\n\n\nfunction generateId() {\n  return `song=${Math.random().toString(36).substr(2,9)}`\n}\n\nfunction App() {\n  const [isFormVisible, changeFormVisibility] = useState(false);\n  const [editableSong, setEditable] = useState(null);\n  const [list, changeList] = useState([\n     {id: '001', status: 'stop', name: 'Sting - Shape of My Heart', pauser: 'Play', stoper: 'Stop',},\n     {id: '002', status: 'stop', name: 'Eminem - My name is', pauser: 'Play', stoper: 'Stop',},\n     {id: '003', status: 'stop', name: 'Rage - The Seige', pauser: 'Play', stoper: 'Stop',},\n     {id: '004', status: 'stop', name: 'Arctics Monkeys - When the Sun Going Down', pauser: 'Play', stoper: 'Stop',},\n  ]);\n\n\n\n  const handleChange =  useCallback((name, status) => {\n      changeList((prevState) => {\n      const newState = prevState.map((song) => {\n        if (song.name === name) {\n          return {\n            id: song.id,\n            pauser: changeBtn(status),\n            status: changeStatus(status),\n            name: name,\n            stoper: song.stoper,\n          };\n        } \n        return song;\n      });\n      return newState;\n    });\n}, []);\n\nconst handleStop =  useCallback((name) => {\n  changeList((prevState) => {\n  const newState = prevState.map((song) => {\n    if (song.name === name) {\n      return {\n        id: song.id,\n        status: 'stop',\n        name: name,\n        pauser: 'Play',\n        stoper: 'Stop',\n      };\n    } \n    return song;\n  });\n  return newState;\n  \n});\n}, []);\n\nconst handleCreateSong = useCallback(() => {\n  changeFormVisibility(true);\n}, []);\n\nconst createNewSongItem = useCallback((name, status) => {\n  changeList((prevState) => {\n    const newState = prevState.concat([{ id: generateId(), name, status, pauser: 'Play', stoper: 'Stop' } ]);\n    return newState;\n  })\n  changeFormVisibility(false);\n}, []);\n\nconst updateSongItem = useCallback((updatedSongID, updatedSongName, updatedSongStatus) => {\n   changeList((prevState) => {\n   const newState = prevState.map((songItem) => {\n    if (songItem.id === updatedSongID) {\n      return {\n         id: songItem.id,\n         name: updatedSongName,\n         status: updatedSongStatus,\n         pauser: songItem.pauser,\n         stoper:  songItem.stoper,\n      } \n    } else {\n      return songItem;\n    }\n   });\n   return newState;\n })\n  setEditable(null);\n}, []);\n\nconst handleDelete = useCallback((id) => {\nchangeList((prevState) => {\n  const newState = prevState.filter((songItem) => {\n    return songItem.id !== id;\n  });\n  return newState;\n})\n}, []);\n\nconst handleEdit = useCallback((id) => {\nconst songFromList = list.find((songItem) => {\n  return songItem.id === id;\n});\nsetEditable(songFromList);\n}, [list]);\n\n\n  return (\n    <section>\n      {list.map((songItem) => {\n        return (\n                <MusicPlayer \n                key={songItem.id} \n                id={songItem.id}\n                name={songItem.name} \n                status={songItem.status} \n                pauseBtn={songItem.pauser}\n                stopBtn={songItem.stoper}\n                onChange={handleChange}\n                onStop={handleStop}\n                onDelete={handleDelete}\n                onEdit={handleEdit}\n               />\n              );\n        })};\n        <div className=\"centered\">\n            <Button variant=\"success\" size=\"lg\" onClick={handleCreateSong}>Add Song</Button>\n        </div>\n        {isFormVisible ? (<MusicForm onSave={createNewSongItem}/>) : null}\n        {editableSong ? (<MusicForm \n                            id={editableSong.id} \n                            name={editableSong.name} \n                            status={editableSong.status} \n                            onUpdate={updateSongItem}/>) : null}\n    </section>\n      )}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}